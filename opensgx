#! /bin/bash
ROOT=$(dirname "$0")
SGXTOOL=$ROOT/user/sgx-tool
SGX=$ROOT/sgx
DEVICEKEY=$ROOT/user/conf/device.key
INTELKEY=$ROOT/user/conf/intel.key

key_gen() {
  FILENAME=sign.key
  $SGXTOOL -k 3072 > $FILENAME
}

compile_code() {
  BASEDIR=$(dirname $1)
  SUBDIR=${BASEDIR#*/}
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"

  cd user
  make $SUBDIR/$NAME.sgx
}

run_enclave() {
  BASEDIR=$(dirname $1)
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"
  EXE=$BASEDIR/$NAME.sgx

  $SGX $EXE $1
}

measure() {
  size=$(stat -c%s $1)
  /bin/echo "Size:" $size 

  offset=$(readelf -l $1 | grep LOAD)
  array=($offset)
  offset=${array[1]}

  echo $size $offset 

  code_start=$(readelf -l $1 | grep LOAD)
  array=($code_start)
  code_start=${array[2]}

  code_end=$(nm $1 | grep _edata)
  array=($code_end)
  code_end=${array[0]}

  echo $size $offset  $code_start $code_end 

  data_start=$code_end
  data_end=$code_end

  echo $size $offset  $code_start $code_end $data_start $data_end

  entry=$(nm $1 | grep enclave_start)
  array=($entry)
  entry=${array[0]}

  SZ="--size="
  CO="--offset="
  CS="--code_start="
  CE="--code_end="
  DS="--data_start="
  DE="--data_end="
  EN="--entry="

  $SGXTOOL -m $1 $SZ$size $CO$offset $CS$code_start $CE$code_end $DS$data_start $DE$data_end $EN$entry
}

sign-intel() {
  BASEDIR=$(dirname $1)
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"
  MEASURE=$BASEDIR/$NAME-measurement.conf
  SIG=$BASEDIR/$NAME-sig.conf
  TOKEN=$BASEDIR/$NAME-token.conf
  CONF=$BASEDIR/$NAME.conf

  touch $CONF
  measure $1 > $MEASURE

  $SGXTOOL -S $MEASURE -I > $SIG
  $SGXTOOL -s $SIG --key=$INTELKEY > $CONF
  $SGXTOOL -E $CONF >> $CONF
  rm $MEASURE $SIG 
}

sign() {
  BASEDIR=$(dirname $1)
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"
  MEASURE=$BASEDIR/$NAME-measurement.conf
  SIG=$BASEDIR/$NAME-sig.conf
  TOKEN=$BASEDIR/$NAME-token.conf
  CONF=$BASEDIR/$NAME.conf

  touch $CONF
  measure $1 > $MEASURE

  $SGXTOOL -S $MEASURE > $SIG
  $SGXTOOL -s $SIG --key=$2 > $CONF
  $SGXTOOL -E $CONF > $TOKEN
  $SGXTOOL -M $TOKEN --key=$DEVICEKEY >> $CONF

  rm $MEASURE $SIG $TOKEN
}

case "$1" in
  -k|--key)
  key_gen
  ;;
  -c|--compile)
  compile_code $2
  ;;
  -m|--measure)
  measure $2
  ;;
  -s|--sign)
  case "$3" in
    -k|--key)
    sign $2 $4
    ;;
    -I|--intel)
    sign-intel $2
    ;;
  esac
  ;;
  *)
  run_enclave $1
  ;;
esac
